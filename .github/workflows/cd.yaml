name: Create release

on:
  workflow_dispatch:
    inputs:
      bump:
        type: choice
        description: 'Bump version'
        required: true
        default: 'patch'
        options:
          - major
          - minor
          - patch
          - prepatch
          - prerelease
          - none
  push:
    branches:
      - main

jobs:
  publish:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        poetry-version: [1.4.0]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    outputs:
      version: ${{ steps.bump.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup Poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Bump version
        if: ${{ github.event_name == 'workflow_dispatch' &&  github.event.inputs.bump  != 'none' }}
        run: |
          poetry version ${{ github.event.inputs.bump }}
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git commit -am "bump version to $(poetry version -s)"
          git push
      - name: Get current version
        id: version
        run: |
          echo "version=$(poetry version -s)" >> "$GITHUB_OUTPUT"
      - name: Tag and create release
        uses: ncipollo/release-action@v1.12.0
        if: ${{ steps.bump.outputs.version != '' }}
        with:
          tag: v${{ steps.version.outputs.version }}
          skipIfReleaseExists: true
      - name: Publish
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          poetry config pypi-token.pypi $PYPI_TOKEN
          poetry publish --build --skip-existing